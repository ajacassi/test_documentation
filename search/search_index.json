{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Python integration with Xautomata API</p>"},{"location":"dev_guide/","title":"Developer Guide","text":"<p>This part of the project documentation focuses on an understanding-oriented approach. You'll get a chance to read about the background of the project, as well as reasoning about how it was implemented.</p> <p>Note: Expand this section by considering the following points:</p> <ul> <li>Give context and background on your library</li> <li>Explain why you created it</li> <li>Provide multiple examples and approaches of how     to work with it</li> <li>Help the reader make connections</li> <li>Avoid writing instructions or technical descriptions     here</li> </ul>"},{"location":"info/","title":"Welcome to Test Documentatino","text":"<p>First Try</p>"},{"location":"info/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"info/#project-overview","title":"Project Overview","text":"<p>Do math with your own functions.</p> <p>Modules exported by this package:</p> <ul> <li><code>mok_content</code>: text from init</li> </ul>"},{"location":"info/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>This part of the project documentation focuses on a learning-oriented approach. You'll learn how to get started with the code in this project.</p> <p>Note: Expand this section by considering the following points:</p> <ul> <li>Help newcomers with getting started</li> <li>Teach readers about your library by making them     write code</li> <li>Inspire confidence through examples that work for     everyone, repeatably</li> <li>Give readers an immediate sense of achievement</li> <li>Show concrete examples, no abstractions</li> <li>Provide the minimum necessary explanation</li> <li>Avoid any distractions</li> </ul>"},{"location":"mok_doc.first_level.postprocess/","title":"Mok doc.first level.postprocess","text":""},{"location":"mok_doc.first_level.postprocess/#mok_doc.first_level.postprocess.test_try","title":"<code>test_try(a, b)</code>","text":"<p>Parameters:</p> Name Type Description Default <code>a</code> <code>int</code> <p>a</p> required <code>b</code> <code>float</code> <p>b</p> required Source code in <code>mok_doc/first_level/postprocess.py</code> <pre><code>def test_try(a, b):\n\"\"\"\n    Args:\n        a (int): a\n        b (float): b\n    \"\"\"\n</code></pre>"},{"location":"mok_doc.first_level.preprocess/","title":"Mok doc.first level.preprocess","text":""},{"location":"mok_doc.first_level.second_level.analitics/","title":"Mok doc.first level.second level.analitics","text":""},{"location":"mok_doc.first_level_second.api/","title":"Mok doc.first level second.api","text":""},{"location":"mok_doc.first_level_second.errors_hand/","title":"Mok doc.first level second.errors hand","text":""},{"location":"mok_doc.mok_content/","title":"Mok doc.mok content","text":""},{"location":"mok_doc.mok_content/#mok_doc.mok_content.mok_text","title":"<code>mok_text(var1, var2, **kwargs)</code>","text":"<p>testo della prima funzione</p> <p>Parameters:</p> Name Type Description Default <code>var1</code> <code>int</code> <p>intero prima var</p> required <code>var2</code> <code>int</code> <p>intero seconda var</p> required <code>**kwargs</code> <p>additional parameters</p> <code>{}</code> <p>Other Parameters:</p> Name Type Description <code>skip</code> <code>int</code> <p>numero di oggetti che si vogliono saltare nella risposta. Default to 0.</p> <code>limit</code> <code>int</code> <p>numero di oggetti massimi che si vogliono ottenere. Default to 1_000_000.</p> <code>count</code> <code>bool</code> <p>Se True nel header della risposta e' presente la dimensione massima a db della chiamata fatta, sconsigliabile perche raddoppia il tempo per chiamata. Default to False.</p> <code>like</code> <code>bool</code> <p>Se True, eventuali filtri richiesti dalla API vengono presi come porzioni di testo, se False il matching sul campo dei filtri deve essere esatto. Default to True.</p> <code>sort_by</code> <code>str</code> <p>Stringa separata da virgole di campi su cui ordinare. Si indica uno o piu campi della risposta e si puo chiedere di ottenere i valori di quei campi in ordine ascendente o discendente. Esempio \"Customer:Desc\". Default to \"\".</p> <code>null_fileds</code> <code>str</code> <p>Stringa separata da virgole di campi di cui si vuole rimuovere, o imporre, un valore nullo nel result set. Esempio \"campo:nullable\". Default to \"\".</p> <code>type</code> <code>str</code> <p>additional filter</p> <code>code</code> <code>str</code> <p>additional filter</p> <code>company_name</code> <code>str</code> <p>additional filter</p> <code>address</code> <code>str</code> <p>additional filter</p> <code>zip_code</code> <code>str</code> <p>additional filter</p> <code>city</code> <code>str</code> <p>additional filter</p> <code>country</code> <code>str</code> <p>additional filter</p> <code>notes</code> <code>str</code> <p>additional filter</p> <code>vat_id</code> <code>str</code> <p>additional filter</p> <code>currency</code> <code>str</code> <p>additional filter</p> <code>state_province</code> <code>str</code> <p>additional filter</p> <code>status</code> <code>str</code> <p>additional filter</p> Example <p>mok_text(1, 'ciao') = [1, 'ciao']</p> <p>Returns:</p> Name Type Description <code>rspense</code> <code>List</code> <p>risposta</p> Source code in <code>mok_doc/mok_content.py</code> <pre><code>def mok_text(var1: int, var2: str, **kwargs) -&gt; list:\n\"\"\"\n    testo della prima funzione\n    Args:\n        var1 (int): intero prima var\n        var2 (int): intero seconda var\n        **kwargs: additional parameters\n    Keyword Args:\n        skip (int, optional): numero di oggetti che si vogliono saltare nella risposta. Default to 0.\n        limit (int, optional): numero di oggetti massimi che si vogliono ottenere. Default to 1_000_000.\n        count (bool, optional): Se True nel header della risposta e' presente la dimensione massima a db della chiamata fatta, sconsigliabile perche raddoppia il tempo per chiamata. Default to False.\n        like (bool, optional): Se True, eventuali filtri richiesti dalla API vengono presi come porzioni di testo, se False il matching sul campo dei filtri deve essere esatto. Default to True.\n        sort_by (str, optional): Stringa separata da virgole di campi su cui ordinare. Si indica uno o piu campi della risposta e si puo chiedere di ottenere i valori di quei campi in ordine ascendente o discendente. Esempio \"Customer:Desc\". Default to \"\".\n        null_fileds (str, optional): Stringa separata da virgole di campi di cui si vuole rimuovere, o imporre, un valore nullo nel result set. Esempio \"campo:nullable\". Default to \"\".\n        type (str, optional): additional filter\n        code (str, optional): additional filter\n        company_name (str, optional): additional filter\n        address (str, optional): additional filter\n        zip_code (str, optional): additional filter\n        city (str, optional): additional filter\n        country (str, optional): additional filter\n        notes (str, optional): additional filter\n        vat_id (str, optional): additional filter\n        currency (str, optional): additional filter\n        state_province (str, optional): additional filter\n        status (str, optional): additional filter\n    Example:\n        mok_text(1, 'ciao') = [1, 'ciao']\n    Returns:\n        rspense (List): risposta\n    \"\"\"\nreturn [var1, var2]\n</code></pre>"},{"location":"mok_doc.mok_content/#mok_doc.mok_content.mok_text_test","title":"<code>mok_text_test(var1, var2, **kwargs)</code>","text":"<p>testo della prima funzione</p> <p>Parameters:</p> Name Type Description Default <code>var1</code> <code>int</code> <p>intero prima var</p> required <code>var2</code> <code>int</code> <p>intero seconda var</p> required Example <p>mok_text(1, 'ciao') = [1, 'ciao']</p> <p>Returns:</p> Name Type Description <code>rspense</code> <code>List</code> <p>risposta</p> Source code in <code>mok_doc/mok_content.py</code> <pre><code>def mok_text_test(var1: int, var2: str, **kwargs) -&gt; list:\n\"\"\"\n    testo della prima funzione\n    Args:\n        var1 (int): intero prima var\n        var2 (int): intero seconda var\n    Example:\n        mok_text(1, 'ciao') = [1, 'ciao']\n    Returns:\n        rspense (List): risposta\n    \"\"\"\nreturn [var1, var2]\n</code></pre>"},{"location":"mok_doc.mok_content2/","title":"Mok doc.mok content2","text":""},{"location":"mok_doc.mok_content2/#mok_doc.mok_content2.MokClass","title":"<code>MokClass</code>","text":"<p>Attributes:</p> Name Type Description <code>start</code> <code>bool</code> <p>start as False</p> Source code in <code>mok_doc/mok_content2.py</code> <pre><code>class MokClass:\n\"\"\"\n    attributes:\n        start (bool): start as False\n    \"\"\"\ndef __init__(self):\nself.start = False\ndef mok_text2(self, var1: int, var2: str, **kwargs) -&gt; list:\n\"\"\"\n        testo della prima funzione\n        Args:\n            var1 (int): intero prima var\n            var2 (int): intero seconda var\n            **kwargs: additional parameters\n        Keyword Args:\n            skip (int, optional): numero di oggetti che si vogliono saltare nella risposta. Default to 0.\n            limit (int, optional): numero di oggetti massimi che si vogliono ottenere. Default to 1_000_000.\n            count (bool, optional): Se True nel header della risposta e' presente la dimensione massima a db della chiamata fatta, sconsigliabile perche raddoppia il tempo per chiamata. Default to False.\n            like (bool, optional): Se True, eventuali filtri richiesti dalla API vengono presi come porzioni di testo, se False il matching sul campo dei filtri deve essere esatto. Default to True.\n            sort_by (str, optional): Stringa separata da virgole di campi su cui ordinare. Si indica uno o piu campi della risposta e si puo chiedere di ottenere i valori di quei campi in ordine ascendente o discendente. Esempio \"Customer:Desc\". Default to \"\".\n            null_fileds (str, optional): Stringa separata da virgole di campi di cui si vuole rimuovere, o imporre, un valore nullo nel result set. Esempio \"campo:nullable\". Default to \"\".\n            type (str, optional): additional filter\n            code (str, optional): additional filter\n            company_name (str, optional): additional filter\n            address (str, optional): additional filter\n            zip_code (str, optional): additional filter\n            city (str, optional): additional filter\n            country (str, optional): additional filter\n            notes (str, optional): additional filter\n            vat_id (str, optional): additional filter\n            currency (str, optional): additional filter\n            state_province (str, optional): additional filter\n            status (str, optional): additional filter\n        Example:\n            mok_text(1, 'ciao') = [1, 'ciao']\n        Returns:\n            rspense (List): risposta\n        \"\"\"\nself.start = True\nreturn [var1, var2]\ndef mok_text3(self, var1: int, var2: str, **kwargs) -&gt; list:\n\"\"\"\n        testo della prima funzione\n        Args:\n            var1 (int): intero prima var\n            var2 (int): intero seconda var\n        Returns:\n            rspense (List): risposta\n        \"\"\"\nself.start = True\nreturn [var1, var2]\n</code></pre>"},{"location":"mok_doc.mok_content2/#mok_doc.mok_content2.MokClass.mok_text2","title":"<code>mok_text2(var1, var2, **kwargs)</code>","text":"<p>testo della prima funzione</p> <p>Parameters:</p> Name Type Description Default <code>var1</code> <code>int</code> <p>intero prima var</p> required <code>var2</code> <code>int</code> <p>intero seconda var</p> required <code>**kwargs</code> <p>additional parameters</p> <code>{}</code> <p>Other Parameters:</p> Name Type Description <code>skip</code> <code>int</code> <p>numero di oggetti che si vogliono saltare nella risposta. Default to 0.</p> <code>limit</code> <code>int</code> <p>numero di oggetti massimi che si vogliono ottenere. Default to 1_000_000.</p> <code>count</code> <code>bool</code> <p>Se True nel header della risposta e' presente la dimensione massima a db della chiamata fatta, sconsigliabile perche raddoppia il tempo per chiamata. Default to False.</p> <code>like</code> <code>bool</code> <p>Se True, eventuali filtri richiesti dalla API vengono presi come porzioni di testo, se False il matching sul campo dei filtri deve essere esatto. Default to True.</p> <code>sort_by</code> <code>str</code> <p>Stringa separata da virgole di campi su cui ordinare. Si indica uno o piu campi della risposta e si puo chiedere di ottenere i valori di quei campi in ordine ascendente o discendente. Esempio \"Customer:Desc\". Default to \"\".</p> <code>null_fileds</code> <code>str</code> <p>Stringa separata da virgole di campi di cui si vuole rimuovere, o imporre, un valore nullo nel result set. Esempio \"campo:nullable\". Default to \"\".</p> <code>type</code> <code>str</code> <p>additional filter</p> <code>code</code> <code>str</code> <p>additional filter</p> <code>company_name</code> <code>str</code> <p>additional filter</p> <code>address</code> <code>str</code> <p>additional filter</p> <code>zip_code</code> <code>str</code> <p>additional filter</p> <code>city</code> <code>str</code> <p>additional filter</p> <code>country</code> <code>str</code> <p>additional filter</p> <code>notes</code> <code>str</code> <p>additional filter</p> <code>vat_id</code> <code>str</code> <p>additional filter</p> <code>currency</code> <code>str</code> <p>additional filter</p> <code>state_province</code> <code>str</code> <p>additional filter</p> <code>status</code> <code>str</code> <p>additional filter</p> Example <p>mok_text(1, 'ciao') = [1, 'ciao']</p> <p>Returns:</p> Name Type Description <code>rspense</code> <code>List</code> <p>risposta</p> Source code in <code>mok_doc/mok_content2.py</code> <pre><code>def mok_text2(self, var1: int, var2: str, **kwargs) -&gt; list:\n\"\"\"\n    testo della prima funzione\n    Args:\n        var1 (int): intero prima var\n        var2 (int): intero seconda var\n        **kwargs: additional parameters\n    Keyword Args:\n        skip (int, optional): numero di oggetti che si vogliono saltare nella risposta. Default to 0.\n        limit (int, optional): numero di oggetti massimi che si vogliono ottenere. Default to 1_000_000.\n        count (bool, optional): Se True nel header della risposta e' presente la dimensione massima a db della chiamata fatta, sconsigliabile perche raddoppia il tempo per chiamata. Default to False.\n        like (bool, optional): Se True, eventuali filtri richiesti dalla API vengono presi come porzioni di testo, se False il matching sul campo dei filtri deve essere esatto. Default to True.\n        sort_by (str, optional): Stringa separata da virgole di campi su cui ordinare. Si indica uno o piu campi della risposta e si puo chiedere di ottenere i valori di quei campi in ordine ascendente o discendente. Esempio \"Customer:Desc\". Default to \"\".\n        null_fileds (str, optional): Stringa separata da virgole di campi di cui si vuole rimuovere, o imporre, un valore nullo nel result set. Esempio \"campo:nullable\". Default to \"\".\n        type (str, optional): additional filter\n        code (str, optional): additional filter\n        company_name (str, optional): additional filter\n        address (str, optional): additional filter\n        zip_code (str, optional): additional filter\n        city (str, optional): additional filter\n        country (str, optional): additional filter\n        notes (str, optional): additional filter\n        vat_id (str, optional): additional filter\n        currency (str, optional): additional filter\n        state_province (str, optional): additional filter\n        status (str, optional): additional filter\n    Example:\n        mok_text(1, 'ciao') = [1, 'ciao']\n    Returns:\n        rspense (List): risposta\n    \"\"\"\nself.start = True\nreturn [var1, var2]\n</code></pre>"},{"location":"mok_doc.mok_content2/#mok_doc.mok_content2.MokClass.mok_text3","title":"<code>mok_text3(var1, var2, **kwargs)</code>","text":"<p>testo della prima funzione</p> <p>Parameters:</p> Name Type Description Default <code>var1</code> <code>int</code> <p>intero prima var</p> required <code>var2</code> <code>int</code> <p>intero seconda var</p> required <p>Returns:</p> Name Type Description <code>rspense</code> <code>List</code> <p>risposta</p> Source code in <code>mok_doc/mok_content2.py</code> <pre><code>def mok_text3(self, var1: int, var2: str, **kwargs) -&gt; list:\n\"\"\"\n    testo della prima funzione\n    Args:\n        var1 (int): intero prima var\n        var2 (int): intero seconda var\n    Returns:\n        rspense (List): risposta\n    \"\"\"\nself.start = True\nreturn [var1, var2]\n</code></pre>"},{"location":"mok_doc.version/","title":"Mok doc.version","text":""},{"location":"user_guide/","title":"User Guide","text":"<p>This part of the project documentation focuses on a problem-oriented approach. You'll tackle common tasks that you might have, with the help of the code provided in this project.</p>"},{"location":"user_guide/#how-to-add-two-numbers","title":"How To Add Two Numbers?","text":"<p>You have two numbers and you need to add them together. You're in luck! The <code>calculator</code> package can help you get this done.</p> <p>Download the code from this GitHub repository and place the <code>calculator/</code> folder in the same directory as your Python script:</p> <pre><code>your_project/\n\u2502\n\u251c\u2500\u2500 calculator/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 calculations.py\n\u2502\n\u2514\u2500\u2500 your_script.py\n</code></pre> <p>Inside of <code>your_script.py</code> you can now import the <code>add()</code> function from the <code>calculator.calculations</code> module:</p> <pre><code># your_script.py\nfrom calculator.calculations import add\n</code></pre> <p>After you've imported the function, you can use it to add any two numbers that you need to add:</p> <pre><code># your_script.py\nfrom calculator.calculations import add\n\nprint(add(20, 22))  # OUTPUT: 42.0\n</code></pre> <p>You're now able to add any two numbers, and you'll always get a <code>float</code> as a result.</p>"}]}